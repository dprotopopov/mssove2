<!-- The application's start-up page. You can change the start-up page in the App.xaml.cs file.-->
<Layout:DXPage
    x:Class="BBSGridApp.View.GroupedItemsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="using:BBSGridApp.ViewModel"
    xmlns:data="using:BBSGridApp.DataModel"
    xmlns:Layout="using:DevExpress.UI.Xaml.Layout"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.DataContext>
        <vm:GroupedItemsViewModel/>
    </Page.DataContext>
    <Page.Resources>

        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding Groups}"
            IsSourceGrouped="true"
            ItemsPath="TopItems"
            d:Source="{Binding AllGroups, Source={d:DesignInstance Type=data:SampleDataSource, IsDesignTimeCreatable=True}}"/>
        <DataTemplate x:Key="Mono250x250ItemTemplate">
            <Grid HorizontalAlignment="Left" Width="250" Height="250"
            Background="#303030">
                <StackPanel VerticalAlignment="Bottom">
                    <Image Source="{Binding Image}" Margin="10,0,18,0" MaxHeight="160" AutomationProperties.Name="{Binding Title}"/>
                    <TextBlock Text="{Binding Title}" Foreground="White" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <!-- The PageAdornerControl displays the back button and a page title.  -->
    <Layout:PageAdornerControl Header="{StaticResource AppName}"
        Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
        <Grid>
            <!-- Defines the visibility of controls according to the application's state
            (Portrait, Landscape, Snapped and Filled) -->
            <Layout:LayoutAwareDecorator>
                <!-- Horizontal scrolling grid used in most view states -->
                <Layout:DXGridView
                    x:Name="itemGridView"
                    AutomationProperties.AutomationId="ItemGridView"
                    AutomationProperties.Name="Grouped Items"
                    Padding="10"
                    ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
                    ItemTemplate="{StaticResource Mono250x250ItemTemplate}"
                    SelectionMode="None"
                    IsSwipeEnabled="false"
                    IsItemClickEnabled="True"
                    ItemNavigationTargetTypeBinding ="{Binding NavigationTarget}"
                    ItemNavigationTargetParameterBinding="{Binding UniqueId}">
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Grid Margin="1,0,0,6">
                                        <Layout:DXButton
                                            NavigationTargetType="GroupDetailPage"
                                            NavigationTargetParameter="{Binding UniqueId}"
                                            AutomationProperties.Name="Group Title"
                                            Style="{StaticResource TextPrimaryButtonStyle}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                                <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                            </StackPanel>
                                        </Layout:DXButton>
                                    </Grid>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                        </GroupStyle>
                    </GridView.GroupStyle>
                </Layout:DXGridView>
                
                <!-- Vertical scrolling list only used when snapped -->
                <Layout:DXListView
                    x:Name="itemListView"
                    Layout:LayoutAwareDecorator.ViewStateVisibility="Snapped"
                    AutomationProperties.AutomationId="ItemListView"
                    AutomationProperties.Name="Grouped Items"
                    Visibility="Collapsed"
                    Margin="0,-10,0,0"
                    Padding="10,0,0,60"
                    ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
                    ItemTemplate="{StaticResource Standard80ItemTemplate}"
                    ItemNavigationTargetTypeBinding ="{Binding NavigationTarget}"
                    ItemNavigationTargetParameterBinding="{Binding UniqueId}"
                    SelectionMode="None"
                    IsSwipeEnabled="false"
                    IsItemClickEnabled="True">

                    <Layout:DXListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Grid Margin="7,7,0,0">
                                        <Layout:DXButton AutomationProperties.Name="Group Title"
                                            NavigationTargetType="GroupDetailPage"
                                            NavigationTargetParameter="{Binding UniqueId}"
                                            Style="{StaticResource TextPrimaryButtonStyle}">
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="{Binding Image}" Margin="10,0,18,0" MaxHeight="160" AutomationProperties.Name="{Binding Title}"/>
                                                <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                                <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                            </StackPanel>
                                        </Layout:DXButton>
                                    </Grid>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </Layout:DXListView.GroupStyle>
                </Layout:DXListView>
            </Layout:LayoutAwareDecorator>
        </Grid>
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait"/>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Layout:PageAdornerControl>
</Layout:DXPage>